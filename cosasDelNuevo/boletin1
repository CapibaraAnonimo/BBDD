--1. QUEREMOS SABER CUAL ES EL PROVEEDOR QUE HA PROVISIONADO EN PROMEDIO MÁS PRODUCTOS QUE EL 
--PROVEEDOR QUE LO HA HECHO MENOS.

WITH promedio AS(
	SELECT AVG(quantity) "suma", company_name
	FROM order_details JOIN products USING(product_id)
		JOIN suppliers USING(supplier_id)
	GROUP BY company_name
	ORDER BY AVG(quantity) ASC
	LIMIT 2
)
SELECT *
FROM promedio
ORDER BY suma DESC
LIMIT 1;


--2. Para tener control sobre la tendencia de provisionamiento (en cuanto a unidades se refiere) de los proveedores y 
--poder descartar aquellos que no son aptos, hemos de tener un listado de los que si lo son. Se considera que un 
--proveedor es acto si el promedio de unidades que ha proporcionado es superior al promedio total de unidades vendidas.


WITH sumaSupplier AS(
	SELECT SUM(quantity) "ventas", supplier_id
	FROM order_details JOIN products USING(product_id)
		JOIN suppliers USING(supplier_id)
	GROUP BY supplier_id
),
promedio AS(
	SELECT AVG(ventas)
	FROM sumaSupplier
)
SELECT company_name, ventas
FROM suppliers JOIN sumaSupplier USING(supplier_id)
WHERE ventas > (SELECT * FROM promedio);


--2.1

WITH promedio AS(
	SELECT ROUND(AVG(quantity), 0) "suma", company_name
	FROM order_details JOIN products USING(product_id)
		JOIN suppliers USING(supplier_id)
	GROUP BY company_name
	ORDER BY AVG(quantity)
)
SELECT company_name
FROM promedio JOIN suppliers USING(company_name)
WHERE suma > (SELECT ROUND(AVG(suma), 0) FROM promedio);

--3. Para tener control sobre los beneficios de los proveedores y poder asi descartar aquellos no aptos, hemos de 
--tener un listado de los que son aptos. Se considera que un proveedor es acto  lasventas obtenidas por el mismo es 
--inferior al 2% de las ventas totales

WITH producido AS(
	SELECT SUM((unit_price*quantity)) "total"
	FROM order_details
),
producidoEmpresa AS(
	SELECT SUM((o1.unit_price*quantity)) "suma", supplier_id
	FROM order_details o1 JOIN products USING(product_id)
		JOIN suppliers USING(supplier_id)
	GROUP BY supplier_id
)
SELECT company_name
FROM producidoEmpresa JOIN suppliers USING(supplier_id)
WHERE suma < (SELECT (total * 0.02) FROM producido);


--4. Queremos saber que proveedores son aptos en cuanto a provisionamiento de unidades así como en cuanto a beneficio 
--obtenido

WITH sumaSupplier AS(
	SELECT SUM(quantity) "ventas", supplier_id
	FROM order_details JOIN products USING(product_id)
		JOIN suppliers USING(supplier_id)
	GROUP BY supplier_id
),
promedio AS(
	SELECT AVG(ventas)
	FROM sumaSupplier
),
lista1 AS (
	SELECT company_name, ventas
	FROM suppliers JOIN sumaSupplier USING(supplier_id)
	WHERE ventas > (SELECT * FROM promedio)
),
producido AS(
	SELECT SUM((unit_price*quantity) * (1-discount)) "total"
	FROM order_details
),
producidoEmpresa AS(
	SELECT SUM((o1.unit_price*quantity) * (1-discount)) "suma", supplier_id
	FROM order_details o1 JOIN products USING(product_id)
		JOIN suppliers USING(supplier_id)
	GROUP BY supplier_id
),
lista2 AS(
	SELECT company_name
	FROM producidoEmpresa JOIN suppliers USING(supplier_id)
	WHERE suma < (SELECT (total * 0.02) FROM producido)
)
SELECT *
FROM lista1 JOIN lista2 USING(company_name);


--4.2

WITH promedio AS(
	SELECT ROUND(AVG(quantity), 0) "suma", company_name
	FROM order_details JOIN products USING(product_id)
		JOIN suppliers USING(supplier_id)
	GROUP BY company_name
	ORDER BY AVG(quantity)
),
lista1 AS(
	SELECT company_name
	FROM promedio JOIN suppliers USING(company_name)
	WHERE suma > (SELECT ROUND(AVG(suma), 0) FROM promedio)
),
producido AS(
	SELECT SUM((unit_price*quantity) * (1-discount)) "total"
	FROM order_details
),
producidoEmpresa AS(
	SELECT SUM((o1.unit_price*quantity) * (1-discount)) "suma", supplier_id
	FROM order_details o1 JOIN products USING(product_id)
		JOIN suppliers USING(supplier_id)
	GROUP BY supplier_id
),
lista2 AS(
	SELECT company_name
	FROM producidoEmpresa JOIN suppliers USING(supplier_id)
	WHERE suma < (SELECT (total * 0.02) FROM producido)
)
SELECT *
FROM lista1 JOIN lista2 USING(company_name);


--5. Queremos un listado de los proveedores y de la variedad de productos provistos por los mismos, cuyos precios 
--sobrepasan el promedio del precio de los productos provistos por dicho proveedor en dichas categorias

WITH productos AS(
	SELECT DISTINCT(product_id) "producto", company_name
	FROM order_details JOIN products USING(product_id)
		JOIN suppliers USING(supplier_id)
	GROUP BY company_name, product_id
	ORDER BY company_name
),
categorias AS(
	SELECT AVG(unit_price) "precio", category_id
	FROM products JOIN categories USING(category_id)
	GROUP BY category_id
)
SELECT producto, company_name
FROM productos JOIN products ON(producto=product_id)
	JOIN categories c1 USING(category_id)
WHERE unit_price > (SELECT precio FROM categorias c2 WHERE c1.category_id = c2.category_id);


--6. Queremos potenciar las ventas de aquellas categorias de productos menos demandadas. Para ello necesitamos tener 
--un listado por categorias y fecha del numero de productos vendidos


SELECT SUM(quantity), product_name, order_date
FROM order_details JOIN products USING(product_id)
	JOIN orders USING(order_id)
GROUP BY product_id, product_name, order_date;



--7. Listado de empresas de mensajeria que han cubierto cada región

SELECT *
FROM orders JOIN shippers ON(ship_via=shipper_id)
	JOIN order_details USING(order_id)
	JOIN products USING(product_id)
	JOIN suppliers USING(supplier_id)
	
SELECT *
FROM us_states JOIN orders ON(state_abbr=ship_city)

SELECT *				--paso de esta cosa, es una mierda
FROM orders



